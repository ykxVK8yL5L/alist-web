name: release

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.0.1'

jobs:
  release:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    name: Release
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v2.4.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          path: alist-web
          persist-credentials: false
          fetch-depth: 0
          submodules: recursive

      - name: Build
        run: |
          mv alist-web/release.sh .
          bash release.sh
        env:
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      # - name: Publish npm
      #   run: |
      #     cd alist-web
      #     echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
      #     pnpm publish --no-git-checks
      #     cd ..
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Upload dist files
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: main
      #     directory: web-dist
      #     repository: alist-org/web-dist

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: compress/*
      
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.MY_TOKEN }}
          file: compress/*
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  